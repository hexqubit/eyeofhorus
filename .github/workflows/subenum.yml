name: Subdomain Enumeration

on:
  # Manual trigger with domain input
  workflow_dispatch:
    inputs:
      domain:
        description: 'Target domain to scan'
        required: true
        default: 'siasindia.com'

jobs:
  enumerate-subdomains:
    runs-on: ubuntu-latest
    # Add explicit write permissions for contents
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Add bin directory to PATH
        run: |
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          chmod -R +x $GITHUB_WORKSPACE/bin
      
      - name: Setup Python for subcat
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install subcat
        run: |
          pip install pipx
          pipx install subcat
          echo "$(pipx environment --value PIPX_BIN_DIR)" >> $GITHUB_PATH
      
      - name: Verify tools availability
        run: |
          echo "Checking binary availability:"
          which subfinder || echo "subfinder not found"
          which assetfinder || echo "assetfinder not found"
          which findomain || echo "findomain not found"
          which subcat || echo "subcat not found"
      
      - name: Set target domain
        run: |
          echo "TARGET_DOMAIN=${{ github.event.inputs.domain }}" >> $GITHUB_ENV
          echo "Running enumeration against: ${{ env.TARGET_DOMAIN }}"
      
      - name: Create output directory
        run: mkdir -p subdomain_results
      
      - name: Run subcat
        run: |
          echo "Running subcat..."
          subcat -d ${{ env.TARGET_DOMAIN }} -o subdomain_results/subcat.txt || echo "Subcat failed"
    
      - name: Run Assetfinder
        run: |
          echo "Running Assetfinder..."
          assetfinder --subs-only ${{ env.TARGET_DOMAIN }} | tee subdomain_results/assetfinder.txt || echo "Assetfinder failed"

      - name: Run Subfinder
        run: |
          echo "Running Subfinder..."
          subfinder -d ${{ env.TARGET_DOMAIN }} -all -recursive -t 200 -silent -o subdomain_results/subfinder-rescursive.txt || echo "Subfinder failed"
          
      - name: Run Findomain
        run: |
          echo "Running findomain..."
          findomain --quiet -t ${{ env.TARGET_DOMAIN }} | tee subdomain_results/findomain.txt || echo "Findomain failed"
    
      - name: Run GitHub Subdomains
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SUBDOMAIN_TOKEN }}
        run: |
          echo "Running github-subdomains..."
          github-subdomains -d ${{ env.TARGET_DOMAIN }} -t $GITHUB_TOKEN -o subdomain_results/github.txt || echo "GitHub subdomains failed"
      
      - name: Combine and sort results
        run: |
          cd subdomain_results
          sort -u assetfinder.txt findomain.txt subcat.txt subfinder-rescursive.txt > passive.txt
          rm assetfinder.txt findomain.txt subcat.txt subfinder-rescursive.txt
          grep -Fxvi -f passive.txt github.txt > unique_domains.txt

      - name: http probe unique
        run: |
          httpx -l unique_domains.txt -title -sc -silent -no-color -location -p 80,443,8000,8080,8443 -td -cl -probe -o httpx_output_unique.txt
          
      - name: http probe github
        run: |
          httpx -l github.txt -title -sc -silent -no-color -location -p 80,443,8000,8080,8443 -td -cl -probe -o httpx_output_github.txt
   
      - name: http probe passive
        run: |
          httpx -l passive.txt -title -sc -silent -no-color -location -p 80,443,8000,8080,8443 -td -cl -probe -o httpx_output_passive.txt
    
      - name: Upload results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: subdomain-enum-results-${{ env.TARGET_DOMAIN }}-${{ github.run_id }}
          path: subdomain_results/
          retention-days: 7
      
      - name: Commit results
        run: |
          # Format date as YYYY-MM-DD HH:MM:SS in UTC
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S")
          
          git config --global user.name "hexqubit"
          git config --global user.email "hexqubit@users.noreply.github.com"
          
          mkdir -p results/${{ env.TARGET_DOMAIN }}
          cp -r subdomain_results/* results/${{ env.TARGET_DOMAIN }}/
          
          git add results/${{ env.TARGET_DOMAIN }}
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Subdomain enumeration results for ${{ env.TARGET_DOMAIN }} - $timestamp"
            git push
          fi
